PUSH 128 //i = 127
PUSH 127
STORE
PUSH 128 //s[i] = i
LOAD
PUSH 128
LOAD
STORE
PUSH 0
PUSH 128 // if i == 0 break
LOAD
SUBTRACT
JZ 21
PUSH 128 //i--
PUSH 1
PUSH 128
LOAD
SUBTRACT
STORE
POP
JMP 3
PUSH 128 //I=0
PUSH 0
STORE
PUSH 129 //J=0
PUSH 0
STORE
PUSH 129 //START OF LOOP
PUSH 129
LOAD
PUSH 128
LOAD
LOAD
ADD //J+S[I]
PUSH 128
LOAD
PUSH 7
AND //I%8
PUSH 248
ADD
LOAD
ADD //Add it all together
PUSH 127
AND
STORE
CALL 125
PUSH 128
PUSH 128
LOAD
PUSH 1
ADD
STORE
PUSH 128
LOAD
PUSH 128
XOR
JZ 59
POP
JMP 27
PUSH 128 //I=0
PUSH 0
STORE
PUSH 129 //J=0
PUSH 0
STORE
PUSH 128 /I++ LOOP START
PUSH 128
LOAD
PUSH 1
ADD
STORE //FIN
PUSH 129 //J=J+S[I]
PUSH 129
LOAD
PUSH 128
LOAD
LOAD
ADD
PUSH 127
AND
STORE //FIN
CALL 125
PUSH 128 //S[I]
LOAD
LOAD
PUSH 129 //S[J]
LOAD
LOAD
ADD
PUSH 127
AND
LOAD //K
PUSH 1 //FLAG ADDR
PUSH 140 
PUSH 128
LOAD
ADD 
SUBTRACT //FIN
LOAD
XOR
PUSH 1
PUSH 188
PUSH 128
LOAD
ADD
SUBTRACT
LOAD
XOR
POP
JZ 114
PUSH 135
PUSH 1
STORE
HALT
PUSH 128
LOAD
PUSH 48
XOR
JZ 121
POP
JMP 65
PUSH 135
PUSH 2
STORE
HALT
PUSH 129
LOAD
PUSH 128
LOAD
LOAD
PUSH 128
LOAD
PUSH 129
LOAD
LOAD
STORE
STORE
RET